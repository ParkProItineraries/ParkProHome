name: Deploy to S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to S3
      run: |
        # Upload static assets with long cache
        aws s3 sync dist/ s3://parkproit.com/ \
          --delete \
          --cache-control "public, max-age=31536000" \
          --exclude "*.html" \
          --exclude "*.json"
        
        # Upload HTML files with no cache
        aws s3 sync dist/ s3://parkproit.com/ \
          --delete \
          --cache-control "public, max-age=0, must-revalidate" \
          --include "*.html" \
          --include "*.json"
          
    - name: Invalidate CloudFront
      run: |
        # Get CloudFront distribution ID from CloudFormation
        DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
          --stack-name parkproit-cloudfront \
          --region us-east-1 \
          --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' \
          --output text)
        
        if [ ! -z "$DISTRIBUTION_ID" ]; then
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"
          echo "CloudFront cache invalidated for distribution: $DISTRIBUTION_ID"
        else
          echo "Could not find CloudFront distribution ID"
        fi
        
    - name: Deployment Summary
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üìÅ Files uploaded to: s3://parkproit.com/"
        echo "üåê Website URL: https://parkproit.com"
        echo "‚è∞ Deployment time: $(date)"
